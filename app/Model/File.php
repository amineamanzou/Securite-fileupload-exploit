<?php
App::uses('AppModel', 'Model');
/**
 * File Model
 *
 * @property Unit $Unit
 */
class File extends AppModel {

    /**
     * Display field
     *
     * @var string
     */
    public $displayField = 'name';

    public $validate = array(
        'name' => array(
            'rule' => 'notEmpty',
            'message' => 'Nom obligatoire !'
        ),
        'extension' => array(
            'rule' => array('fileExtension', array('jpg','jpeg','png')),
            'message' => 'Vous ne pouvez pas envoyer ce type de fichier. Extensions acceptÃ©es (.jpg,.png,.jpeg)',
        )
    );
    
    /**
     * Method used to validate the logo when uploaded to update or create a challenge
     * 
     * @param file $check
     * @param array $extensions
     * @param boolean $allowEmpty
     * @return boolean
     */
    public function fileExtension($check, $extensions, $allowEmpty = true){
        $file = current($check);
        if($allowEmpty && empty($file['tmp_name'])){
            return true;
        }
        $extension = strtolower(pathinfo($file['name'], PATHINFO_EXTENSION));
        return in_array($extension, $extensions);
    }
    
    /**
     * Before save update the extension system
     * 
     * @param array $options
     */
    public function beforeSave($options = array()) {
        $this->oldLogoExtension = $this->field('logo');
        if ( isset($this->data[$this->alias]['logo']) && $this->data[$this->alias]['logo']['error'] == 0 ){
            $this->logoArray = $this->data[$this->alias]['logo'];
            $this->logoExtension = strtolower(pathinfo($this->logoArray['name'], PATHINFO_EXTENSION));
            $this->data[$this->alias]['logo'] = $this->logoExtension;
        }
        else {
            $this->data[$this->alias]['logo'] = $this->oldLogoExtension;
        }
    }
    
    /**
     * After save depending on creating or updating a challenge move the uploaded file
     * 
     * @param boolean $created
     */
    public function afterSave($created){
        // Add new
        if($created){
            if ( isset($this->logoArray) && $this->logoArray['error'] == 0 ){
                if(!empty($this->logoArray['tmp_name'])){
                    move_uploaded_file(
                        $this->logoArray['tmp_name'],
                        WWW_ROOT . 'images' . DS .'logo-challenges'.DS.$this->field('slug_project').'.'.$this->logoExtension
                    );
                }
            }
        }
        else // Update
        {
            if ( isset($this->logoArray) && $this->logoArray['error'] == 0){
                if(!empty($this->logoArray['tmp_name'])){
                    $oldFile = WWW_ROOT . 'images' . DS .'logo-challenges'.DS.$this->field('slug_project').'.'.$this->oldLogoExtension;
                    if(file_exists($oldFile)){
                        unlink($oldFile);
                    }
                    move_uploaded_file(
                        $this->logoArray['tmp_name'],
                        WWW_ROOT . 'images' . DS .'logo-challenges'.DS.$this->field('slug_project').'.'.$this->logoExtension
                    );
                }
            }
        }
    }
    
    /**
     * before Delete check if the logo exist and unlink it
     * 
     * @param boolean $cascade
     */
    public function beforeDelete($cascade = true) {
        parent::beforeDelete($cascade);
        $oldExtension = $this->field('logo');
        $oldFile = WWW_ROOT . 'images' . DS .'logo-challenges'.DS.$this->data('slug').'.'.$oldExtension;
        if(file_exists($oldFile)){
            unlink($oldFile);
        }
    }

}
